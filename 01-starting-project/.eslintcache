[{"C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\MainHeader\\MainHeader.js":"3","C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\Login\\Login.js":"4","C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\Home\\Home.js":"5","C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\store\\auth-context.js":"6","C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\MainHeader\\Navigation.js":"7","C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\UI\\Card\\Card.js":"8","C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\UI\\Button\\Button.js":"9","C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\ToggleSwitch.js":"10"},{"size":169,"mtime":1616586728000,"results":"11","hashOfConfig":"12"},{"size":1612,"mtime":1652375254871,"results":"13","hashOfConfig":"12"},{"size":590,"mtime":1652375754097,"results":"14","hashOfConfig":"12"},{"size":5665,"mtime":1652374319887,"results":"15","hashOfConfig":"12"},{"size":268,"mtime":1652374254019,"results":"16","hashOfConfig":"12"},{"size":189,"mtime":1652361724465,"results":"17","hashOfConfig":"12"},{"size":779,"mtime":1652360798895,"results":"18","hashOfConfig":"12"},{"size":391,"mtime":1652375442527,"results":"19","hashOfConfig":"12"},{"size":353,"mtime":1616586728000,"results":"20","hashOfConfig":"12"},{"size":466,"mtime":1652362171732,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4duzmq",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\MainHeader\\MainHeader.js",[],"C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\Login\\Login.js",["45"],"import React, { useState, useEffect, useReducer, useContext } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"./../store/auth-context\";\n\n// const emailReducer = (prevState, action) => {\n//   if (action.type === \"USER_INPUT\") {\n//     return {\n//       value: action.emailValue,\n//       isValid: action.emailValue.includes(\"@\"),\n//     };\n//   }\n//   if (action.type === \"INPUT_BLUR\") {\n//     return {\n//       value: prevState.value,\n//       isValid: prevState.value.includes(\"@\"),\n//     };\n//   }\n//   return {\n//     value: \"\",\n//     isValid: false,\n//   };\n// };\n\n// const passwordReducer = (prevState, action) => {\n//   if (action.type === \"USER_PASSWORD\" ) {\n//     return {\n//       value: action.passwordValue,\n//       isValid: action.passwordValue.trim().length > 6,\n//     };\n//   }\n//   if (action.type === \"BLUR_PASSWORD\") {\n//     return {\n//       value: prevState.value,\n//       isValid: prevState.value.trim().length > 6,\n//     };\n//   }\n//   return {\n//     value: \"\",\n//     isValid: false,\n//   };\n// };\n\nconst infoLoginReduser = (prevState, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      ...prevState,\n      valueOfEmail: action.emailValue,\n      isEmailValid: action.emailValue.includes(\"@\"),\n    };\n  }\n  if (action.type === \"USER_PASSWORD\") {\n    return {\n      ...prevState,\n      valueOfPassword: action.passwordValue,\n      isPasswordValid: action.passwordValue.trim().length > 6,\n    };\n  }\n\n  if (action.type === \"BLUR_PASSWORD\") {\n    return {\n      ...prevState,\n      valueOfPassword: prevState.valueOfPassword,\n      isPasswordValid: prevState.valueOfPassword,\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      ...prevState,\n      valueOfEmail: prevState.valueOfEmail,\n      isEmailValid: prevState.valueOfEmail.includes(\"@\"),\n    };\n  }\n  return prevState;\n};\n\nconst Login = (props) => {\n  // const [emailState, dispatchEmail] = useReducer(emailReducer, {\n  //   isValid: undefined,\n  //   value: \"\",\n  // });\n\n  // const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n  //   isValid: undefined,\n  //   value: \"\",\n  // });\n\n  const [infoLogin, dispatchInfoLogin] = useReducer(infoLoginReduser, {\n    isPasswordValid: undefined,\n    isEmailValid: undefined,\n    valueOfEmail: \"\",\n    valueOfPassword: \"\",\n  });\n\n  // const [enteredEmail, setEnteredEmail] = useState('text'); // write some email\n  // const [emailIsValid, setEmailIsValid] = useState(); // check is email valid or not\n  // const [enteredPassword, setEnteredPassword] = useState(\"\"); // write some password\n  // const [passwordIsValid, setPasswordIsValid] = useState(); // check is password valid or not\n  const [formIsValid, setFormIsValid] = useState(false); // email and password are valid\n  useEffect(() => {\n    console.log(infoLogin);\n    const timer = setTimeout(() => {\n      const isValid =\n        infoLogin.valueOfEmail.includes(\"@\") &&\n        infoLogin.valueOfPassword.trim().length > 6;\n      setFormIsValid(isValid);\n    }, 1000);\n\n    // clean up function\n    return () => clearTimeout(timer);\n\n    // }, [emailState.value, passwordState.value]);\n  }, [infoLogin.valueOfEmail, infoLogin.valueOfPassword]);\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    // dispatchEmail({ type: \"USER_INPUT\", emailValue: event.target.value });\n    dispatchInfoLogin({ type: \"USER_INPUT\", emailValue: event.target.value });\n  };\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);//////////////////\n    dispatchInfoLogin({\n      type: \"USER_PASSWORD\",\n      passwordValue: event.target.value,\n    });\n  };\n  const validateEmailHandler = () => {\n    // setEmailIsValid(enteredEmail.includes('@'));\n    dispatchInfoLogin({ type: \"INPUT_BLUR\" });\n  };\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);///////\n    dispatchInfoLogin({ type: \"BLUR_PASSWORD\" });\n  };\n  const submitHandler = (event) => {\n    event.preventDefault();\n    // props.onLogin(emailState, passwordState);\n    props.onLogin(infoLogin);\n  };\n  const formColor = useContext(AuthContext);\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            infoLogin.isEmailValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label\n            style={{ color: formColor.isToggled ? \"white\" : \"\" }}\n            htmlFor=\"email\"\n          >\n            E-Mail\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={infoLogin.valueOfEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            infoLogin.isPasswordValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label\n            style={{ color: formColor.isToggled ? \"white\" : \"\" }}\n            htmlFor=\"password\"\n          >\n            Password\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={infoLogin.valueOfPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\nexport default Login;\n",["46","47"],"C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\Home\\Home.js",["48"],"import React, {useContext} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Home.module.css';\n\nconst Home = (props) => {\n \n\n  return (\n    <Card className={classes.home}>\n      <h1 >Welcome back!</h1>\n    </Card>\n  );\n};\n\nexport default Home;\n","C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\store\\auth-context.js",[],"C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\MainHeader\\Navigation.js",[],"C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\UI\\Card\\Card.js",[],"C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\components\\UI\\Button\\Button.js",[],"C:\\Users\\Lenovo\\Desktop\\01-starting-project-login-page\\01-starting-project\\src\\ToggleSwitch.js",[],{"ruleId":"49","severity":1,"message":"50","line":114,"column":6,"nodeType":"51","endLine":114,"endColumn":57,"suggestions":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'infoLogin'. Either include it or remove the dependency array.","ArrayExpression",["61"],"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar",{"desc":"64","fix":"65"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [infoLogin, infoLogin.valueOfEmail, infoLogin.valueOfPassword]",{"range":"66","text":"67"},[3242,3293],"[infoLogin, infoLogin.valueOfEmail, infoLogin.valueOfPassword]"]